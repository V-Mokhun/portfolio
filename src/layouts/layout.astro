---
import { languages, translateUrl } from "@/lib";
import "@/styles/global.css";
import Footer from "@/ui/astro/widgets/footer.astro";
import Header from "@/ui/astro/widgets/header.astro";
import i18next, { t } from "i18next";
import { ViewTransitions } from "astro:transitions";
import { AnimationPreference } from "@/ui/react";

const currentUrl = Astro.url.origin;

interface Props {
  title?: string;
  animateHeader?: boolean;
}

const { title, animateHeader = false } = Astro.props;
---

<!doctype html>
<html lang={i18next.language} class="h-full">
  <head>
    <ViewTransitions fallback="none" />
    <meta charset="UTF-8" />
    {
      Object.keys(languages).map((supportedLanguage) => (
        <link
          rel="alternate"
          hreflang={supportedLanguage}
          href={translateUrl(currentUrl, supportedLanguage)}
        />
      ))
    }
    <meta name="description" content={t("site.description")} />

    <meta
      name="keywords"
      content="HTML, CSS, JavaScript, React, TypeScript, Next.js, Portfolio website, Frontend developer, frontend, web developer"
    />
    <meta name="author" content="Volodymyr Mokhun" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#5266eb"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#18dccf"
    />

    <meta name="color-scheme" content="dark light" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <slot name="head">
      <title>{title || t("site.title")}</title>
      <!-- Facebook Meta Tags -->
      <meta
        property="og:title"
        content="Volodymyr Mokhun - Front-End developer"
      />
      <meta property="og:site_name" content="Volodymyr Mokhun" />
      <meta property="og:type" content="website" />
      <meta property="og:url" content="https://www.v-mokhun.com/" />
      <meta
        property="og:image"
        content="https://www.v-mokhun.com/og-image.png"
      />
      <meta property="og:image:width" content="3020" />
      <meta property="og:image:height" content="1650" />
      <meta
        property="og:description"
        content="Volodymyr Mokhun, Front-End Developer specializing in React.js, TypeScript, Next.js."
      />

      <!-- Twitter Meta Tags -->
      <meta name="twitter:site" content="@v_mokhun" />
      <meta name="twitter:creator" content="@v_mokhun" />
      <meta name="twitter:card" content="summary_large_image" />
      <meta property="twitter:url" content="https://www.v-mokhun.com/" />
      <meta
        name="twitter:title"
        content="Volodymyr Mokhun - Front-End Developer"
      />
      <meta
        name="twitter:description"
        content="Volodymyr Mokhun, Front-End Developer specializing in React.js, TypeScript, Next.js."
      />
      <meta
        name="twitter:image"
        content="https://www.v-mokhun.com/og-image.png"
      />
    </slot>

    <script is:inline>
      const LOCAL_STORAGE_THEME_KEY = "v-mokhun-portfolio-theme";

      const theme = (() => {
        if (
          localStorage.getItem(LOCAL_STORAGE_THEME_KEY) === "dark" ||
          (!(LOCAL_STORAGE_THEME_KEY in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          return "dark";
        } else {
          return "light";
        }
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      localStorage.setItem(LOCAL_STORAGE_THEME_KEY, theme);
    </script>
  </head>

  <AnimationPreference client:load>
    <body
      class="relative flex flex-col h-full text-base xs:text-lg leading-normal"
    >
      <Header animate={animateHeader} />
      <main class="flex-1 px-5 xs:px-12 md:px-24 lg:px-36 pt-header-height">
        <slot />
      </main>
      <Footer />
    </body>
  </AnimationPreference>


</html>
